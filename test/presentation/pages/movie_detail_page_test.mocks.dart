// Mocks generated by Mockito 5.0.16 from annotations
// in ditonton/test/presentation/pages/movie_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i12;
import 'dart:ui' as _i13;

import 'package:ditonton/common/state_enum.dart' as _i10;
import 'package:ditonton/domain/entities/movie.dart' as _i11;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i8;
import 'package:ditonton/domain/usecases/get_movie_detail.dart' as _i2;
import 'package:ditonton/domain/usecases/get_movie_recommendations.dart' as _i4;
import 'package:ditonton/domain/usecases/get_tv_series_detail.dart' as _i3;
import 'package:ditonton/domain/usecases/get_watchlist_status.dart' as _i5;
import 'package:ditonton/domain/usecases/remove_watchlist.dart' as _i7;
import 'package:ditonton/domain/usecases/save_watchlist.dart' as _i6;
import 'package:ditonton/presentation/provider/movie_detail_notifier.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetMovieDetailUseCase_0 extends _i1.Fake
    implements _i2.GetMovieDetailUseCase {}

class _FakeGetTvSeriesDetailUseCase_1 extends _i1.Fake
    implements _i3.GetTvSeriesDetailUseCase {}

class _FakeGetMovieRecommendationsUseCase_2 extends _i1.Fake
    implements _i4.GetMovieRecommendationsUseCase {}

class _FakeGetWatchListStatusUseCase_3 extends _i1.Fake
    implements _i5.GetWatchListStatusUseCase {}

class _FakeSaveWatchlistUseCase_4 extends _i1.Fake
    implements _i6.SaveWatchlistUseCase {}

class _FakeRemoveWatchlistUseCase_5 extends _i1.Fake
    implements _i7.RemoveWatchlistUseCase {}

class _FakeMovieDetail_6 extends _i1.Fake implements _i8.MovieDetail {}

/// A class which mocks [MovieDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailNotifier extends _i1.Mock
    implements _i9.MovieDetailNotifier {
  MockMovieDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetMovieDetailUseCase get getMovieDetail =>
      (super.noSuchMethod(Invocation.getter(#getMovieDetail),
              returnValue: _FakeGetMovieDetailUseCase_0())
          as _i2.GetMovieDetailUseCase);
  @override
  _i3.GetTvSeriesDetailUseCase get getTvSeriesDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvSeriesDetail),
              returnValue: _FakeGetTvSeriesDetailUseCase_1())
          as _i3.GetTvSeriesDetailUseCase);
  @override
  _i4.GetMovieRecommendationsUseCase get getMovieRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getMovieRecommendations),
              returnValue: _FakeGetMovieRecommendationsUseCase_2())
          as _i4.GetMovieRecommendationsUseCase);
  @override
  _i5.GetWatchListStatusUseCase get getWatchListStatus =>
      (super.noSuchMethod(Invocation.getter(#getWatchListStatus),
              returnValue: _FakeGetWatchListStatusUseCase_3())
          as _i5.GetWatchListStatusUseCase);
  @override
  _i6.SaveWatchlistUseCase get saveWatchlist => (super.noSuchMethod(
      Invocation.getter(#saveWatchlist),
      returnValue: _FakeSaveWatchlistUseCase_4()) as _i6.SaveWatchlistUseCase);
  @override
  _i7.RemoveWatchlistUseCase get removeWatchlist =>
      (super.noSuchMethod(Invocation.getter(#removeWatchlist),
              returnValue: _FakeRemoveWatchlistUseCase_5())
          as _i7.RemoveWatchlistUseCase);
  @override
  _i8.MovieDetail get movie => (super.noSuchMethod(Invocation.getter(#movie),
      returnValue: _FakeMovieDetail_6()) as _i8.MovieDetail);
  @override
  _i10.RequestState get movieState =>
      (super.noSuchMethod(Invocation.getter(#movieState),
          returnValue: _i10.RequestState.Empty) as _i10.RequestState);
  @override
  List<_i11.Movie> get movieRecommendations =>
      (super.noSuchMethod(Invocation.getter(#movieRecommendations),
          returnValue: <_i11.Movie>[]) as List<_i11.Movie>);
  @override
  _i10.RequestState get recommendationState =>
      (super.noSuchMethod(Invocation.getter(#recommendationState),
          returnValue: _i10.RequestState.Empty) as _i10.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlist),
          returnValue: false) as bool);
  @override
  String get watchlistMessage =>
      (super.noSuchMethod(Invocation.getter(#watchlistMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i12.Future<void> fetchMovieDetail(_i10.CategoryMovie? category, int? id) =>
      (super.noSuchMethod(Invocation.method(#fetchMovieDetail, [category, id]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> addWatchlist(_i8.MovieDetail? movie) => (super.noSuchMethod(
      Invocation.method(#addWatchlist, [movie]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i12.Future<void>);
  @override
  _i12.Future<void> removeFromWatchlist(_i8.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlist, [movie]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
      Invocation.method(#loadWatchlistStatus, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i12.Future<void>);
  @override
  void addListener(_i13.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i13.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
